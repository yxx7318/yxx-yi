package ${packageName}.domain;

#foreach ($import in $importList)
import ${import};
#end
import com.yxx.common.annotation.Excel;
#if($table.crud || $table.sub)
import com.yxx.common.core.domain.BaseEntity;
#elseif($table.tree)
import com.yxx.common.core.domain.TreeEntity;
#end
import com.baomidou.mybatisplus.annotation.TableName;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableField;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.experimental.Accessors;
import lombok.*;

#foreach ($column in $columns)
#if ($column.required)
import jakarta.validation.constraints.NotNull;
#break
#end
#end

/**
 * ${functionName}对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
#if($table.crud || $table.sub)
#set($Entity="BaseEntity")
#elseif($table.tree)
#set($Entity="TreeEntity")
#end
@Schema(description = "${functionName}实体")
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(callSuper = true)
@Accessors(chain = true)
@Builder
@Data
@TableName(value = "${tableName}", autoResultMap = true)
public class ${ClassName} extends ${Entity} {

    private static final long serialVersionUID = 1L;

## 初始化计数器
#set($index = 0)
#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
## 添加swagger
    @Schema(description = "$column.columnComment")
## 添加校验
#if($column.required)
    @NotNull(message = "$column.columnComment不能为空")
#end
## 添加Mp
#if($column.javaField.toLowerCase().indexOf("id") != -1 && $index == 0)
    @TableId(value = "$column.columnName", type = IdType.AUTO)
#else
    @TableField("$column.columnName")
#end
#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($parentheseIndex != -1)
    @Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
#elseif($column.javaType == 'Date' && $column.htmlType == "datetime")
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd HH:mm:ss")
#elseif($column.javaType == 'Date')
    @JsonFormat(pattern = "yyyy-MM-dd")
    @Excel(name = "${comment}", width = 20, dateFormat = "yyyy-MM-dd")
#else
    @Excel(name = "${comment}")
#end
#end
    private $column.javaType $column.javaField;

#end
## 更新计数器
#set($index = $index + 1)
#end
## 主子表的额外属性
#if($table.sub)
    /**
    * $table.subTable.functionName信息
    */
    @TableField(exist = false)
    private List<${subClassName}> ${subclassName}List;

#end
}
