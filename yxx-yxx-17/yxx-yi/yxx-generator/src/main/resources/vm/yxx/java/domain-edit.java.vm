package ${packageName}.entity;

#foreach ($import in $importList)
import ${import};
#end
#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
#if($column.htmlType == "date" || $column.htmlType == "datetime")
import com.fasterxml.jackson.annotation.JsonFormat;
#break
#end
#end
#end
#if($table.crud || $table.sub)
import com.yxx.common.core.domain.BaseEditDtoEntity;
#elseif($table.tree)
import com.yxx.common.core.domain.TreeEntity;
#end
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.experimental.Accessors;
import lombok.*;

#foreach ($column in $columns)
#if (!$table.isSuperColumn($column.javaField) && $column.required && $column.javaType != "String")
import ${javax}.validation.constraints.NotNull;
#break
#end
#end
#foreach ($column in $columns)
#if (!$table.isSuperColumn($column.javaField) && $column.required && $column.javaType == "String")
import ${javax}.validation.constraints.NotBlank;
#break
#end
#end

/**
 * ${functionName}EditDto对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
#if($table.crud || $table.sub)
#set($Entity="BaseEditDtoEntity")
#elseif($table.tree)
#set($Entity="TreeEntity")
#end
@Schema(description = "${functionName}编辑实体")
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(callSuper = true)
@Accessors(chain = true)
@Builder
@Data
public class ${ClassName}EditDto extends ${Entity} {

#if(${javaVersion} != "1.8")
    @Serial
#end
    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
## 添加swagger
    @Schema(description = "$column.columnComment")
## 添加校验
#if($column.required && $column.javaType != "String")
    @NotNull(message = "$column.columnComment不能为空")
#elseif($column.required && $column.javaType == "String")
    @NotBlank(message = "$column.columnComment不能为空")
#end
#if($column.htmlType == "datetime")
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
#elseif($column.htmlType == "date")
    @JsonFormat(pattern = "yyyy-MM-dd")
#end
    private $column.javaType $column.javaField;

#end
#end
}
