spring:
  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://localhost:3306/yxx_prod?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: yxx_prod
        password: yxx_prod12345678*&!
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: false
        url:
        username:
        password:
      # 初始连接数
      initialSize: 10
      # 最小连接池数量
      minIdle: 20
      # 最大连接池数量
      maxActive: 100
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置连接超时时间
      connectTimeout: 30000
      # 配置网络超时时间
      socketTimeout: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 30000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      # 连接处于空闲状态时是否检查有效性
      testWhileIdle: true
      # 从连接池借用连接时是否先执行 validationQuery 验证
      testOnBorrow: false
      # 归还连接到池中时是否执行 validationQuery 验证
      testOnReturn: false
      # 连接超时设置
      # 自动回收泄露连接
      remove-abandoned: true
      # 连接超过300秒未关闭则回收
      remove-abandoned-timeout: 300
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: yxx
        login-password: 123456
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  # redis 配置
  redis:
    # 地址
    host: localhost
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 13
    # 密码
    password: yxx@redis
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 3
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 8
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms

# 服务配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 7318
  servlet:
    # 应用的访问路径
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # 连接数满后的排队数，默认为100
    accept-count: 1000
    threads:
      # tomcat最大线程数，默认为200
      max: 500
      # Tomcat启动初始化的线程数，默认值10
      min-spare: 50

# token配置
token:
  # 令牌自定义标识
  header: Authorization
  # 令牌密钥
  secret: yuuuuuuuuuuuuuxxxx@&!xxxxz
  # 令牌有效期，单位分钟
  expireTime: 60

# 用户配置
user:
  password:
    # 密码最大错误次数
    maxRetryCount: 5
    # 密码锁定时间，单位分钟
    lockTime: 10

# springdoc配置
springdoc:
  api-docs:
    path: '/v3/api-docs'
    enabled: false
  swagger-ui:
    enabled: false
    path: '/swagger-ui.html'

# knife4j配置
knife4j:
  # 是否为生成环境，为真则关闭文档
  production: true
  # 开启增强配置
  enable: true
  # 开启Swagger的Basic认证功能,默认是false
  basic:
    # 开启后由于使用的也是Authorization头，会和SpringSecurity冲突导致请求时JWT过滤器报错，但不影响使用
    enable: false
    # Basic认证用户名
    username: yxx
    # Basic认证密码
    password: 123456
